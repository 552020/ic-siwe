type PublicKey = blob;
type Timestamp = nat64;
type Address = text;
type SessionKey = PublicKey;
type SiweSignature = text;
type SiweMessage = text;
type CanisterPublicKey = PublicKey;
type Principal = blob;

type PrepareLoginResponse = variant {
  Ok : SiweMessage;
  Err : text;
};

type LoginOkResponse = record {
  expiration : Timestamp;
  user_canister_pubkey : CanisterPublicKey;
};

type LoginResponse = variant {
  Ok : LoginOkResponse;
  Err : text;
};

type Delegation = record {
  pubkey : PublicKey;
  expiration : Timestamp;
  targets : opt vec principal;
};

type SignedDelegation = record {
  delegation : Delegation;
  signature : blob;
};

type GetDelegationResponse = variant {
  Ok : SignedDelegation;
  Err : text;
};

type GetPrincipalResponse = variant {
  Ok : Principal;
  Err : text;
};

type GetAddressResponse = variant {
  Ok : Address;
  Err : text;
};

service : {
  "prepare_login" : (Address) -> (PrepareLoginResponse);
  "login" : (SiweSignature, Address, SessionKey) -> (LoginResponse);
  "get_delegation" : (Address, SessionKey, Timestamp) -> (GetDelegationResponse) query;
  "get_principal" : (Address) -> (GetPrincipalResponse) query;
  "get_address" : (Principal) -> (GetAddressResponse) query;
  "caller_address" : () -> (GetAddressResponse) query;
};
